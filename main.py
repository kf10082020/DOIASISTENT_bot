async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –Ω–∞—É—á–Ω—ã–π –±–æ—Ç. –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ:\n"
        "- DOI —Å—Ç–∞—Ç—å–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 10.1038/nature12373)\n"
        "- –ò–ª–∏ –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç–∞—Ç—å—é —Å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ–≥–æ —Å–∞–π—Ç–∞"
    )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    text = update.message.text.strip()
    
    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
    if text.startswith('/'):
        return
        
    await update.message.reply_text("‚åõ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∑–∞–ø—Ä–æ—Å, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
    
    # –ü–µ—Ä–µ–¥–∞–µ–º —Ç–µ–∫—Å—Ç –∫–∞–∫ –µ—Å—Ç—å –≤ handle_doi
    metadata = handle_doi(text)
    reply_text, keyboard = format_reply(metadata)
    
    await update.message.reply_text(
        reply_text,
        parse_mode="Markdown",
        reply_markup=keyboard,
        disable_web_page_preview=True
    )
